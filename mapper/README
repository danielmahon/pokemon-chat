/*
Will be needing this example of how to set up animations in Impact:

// set up animated map tiles
var as = new ig.AnimationSheet( 'media/bg-flower.png', 16, 16 );
var as2 = new ig.AnimationSheet( 'media/bg-flower2.png', 16, 16 );
this.backgroundAnims = {
    'media/starter-towna.png': {
        // flower
        4: new ig.Animation( as, 0.26667, [0,1,0,2] ), // 16 frames out of 60 per
        1: new ig.Animation( as2, 0.26667, [3,5,3,4] ) // 16 frames out of 60 per
    }
};
*/



index.php
-   Used for testing at the moment. For example, outputing Weltmeister maps.

inc.globals.php
-   Contains variables used in more than one place.

inc.functions.js
-   Contains JavaScript functions used in more than one place.

inc.functions.php
-   Useful PHP functions used in more than one place.

trim.php
-   Lists all tilesheets within the maps folder and states whether or not
    they need to be trimmed. Added ?trim=yes to the browser window will
    enable trimming which is by default disabled.

collisions.php
-   Maintains collisions.txt, a collection of collision preferences. Choose
    which collision type tiles should be when opened in Weltmeister.

process-map.php
-   Lists all maps found in the maps directory, whether or not they have
    been processed (a JSON file has been generated for them). If one has not,
    the option is given to generate one.

used-tiles.php // no longer needed?
-   Reads all existing map JSON files in the maps directory and from them it
    compiles an array of all the tiles that exist throughout the game world,
    which is stored as a JSON file used-tiles.js

dump-map-tiles.php
-   Lists all maps found in the maps directory. You are given the option
    to dump the individual tiles of a specific map, or dump from all
    maps at once. Warning: may be time consuming.
    
merge-map-tiles.php
-   Creates a single tilesheet that contains every tile in dumped-tiles folder.
    In other words, this should create a tilesheet that contains every tile
    that appears any place in the game-world. Also generates a JSON file with
    the hash values for every tile for fast lookup.
